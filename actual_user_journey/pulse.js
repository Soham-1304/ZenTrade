// --- pulse.js ---

window.PulseApp = (function () {
    // --- PRIVATE STATE & HELPERS ---
    let stateRef; // A reference to the main app's STATE object

    const getSentimentColor = (score) => {
        if (score > 0.3) return 'bg-positive';
        if (score < -0.3) return 'bg-negative';
        return 'bg-gray-500';
    };

    // --- CORE RENDERING FUNCTION ---
    function renderPulseView(container) {
        // Ensure pulse data exists before trying to render
        const pulseData = stateRef.pulse || { mostBought: [], mostSold: [], sentiment: {} };

        container.innerHTML = `
            <div class="space-y-8">
                <div>
                    <h2 class="text-2xl font-semibold text-primary mb-1">Community Pulse</h2>
                    <p class="text-sm text-secondary">Aggregated & anonymous trading trends from all users on the platform today.</p>
                </div>

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <!-- Top Buys Column -->
                    <div class="bg-secondary rounded-lg themed-shadow p-6">
                        <h3 class="text-lg font-semibold text-primary mb-4 flex items-center">
                            <svg class="w-6 h-6 mr-2 text-positive" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path></svg>
                            Top Buys Today (by Volume)
                        </h3>
                        <div id="pulse-top-buys" class="space-y-4">
                            <!-- Content generated by updatePulseData -->
                        </div>
                    </div>

                    <!-- Top Sells Column -->
                    <div class="bg-secondary rounded-lg themed-shadow p-6">
                        <h3 class="text-lg font-semibold text-primary mb-4 flex items-center">
                             <svg class="w-6 h-6 mr-2 text-negative" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 17l-5-5m0 0l5-5m-5 5h12"></path></svg>
                            Top Sells Today (by Volume)
                        </h3>
                        <div id="pulse-top-sells" class="space-y-4">
                            <!-- Content generated by updatePulseData -->
                        </div>
                    </div>
                </div>
            </div>`;

        updatePulseData(pulseData);
    }

    function updatePulseData(pulseData) {
        const topBuysContainer = document.getElementById('pulse-top-buys');
        const topSellsContainer = document.getElementById('pulse-top-sells');
        if (!topBuysContainer || !topSellsContainer) return;

        // --- Render Top Buys ---
        const maxBuyVolume = pulseData.mostBought.length > 0 ? pulseData.mostBought[0].volume : 1;
        topBuysContainer.innerHTML = pulseData.mostBought.length > 0 
            ? pulseData.mostBought.map(stock => `
                <div>
                    <div class="flex justify-between items-center mb-1">
                        <span class="font-semibold text-primary">${stock.name}</span>
                        <span class="text-sm font-mono text-secondary">${stock.volume.toLocaleString()} shares</span>
                    </div>
                    <div class="w-full bg-primary rounded-full h-2.5">
                        <div class="bg-positive h-2.5 rounded-full" style="width: ${(stock.volume / maxBuyVolume) * 100}%"></div>
                    </div>
                </div>
            `).join('')
            : `<p class="text-secondary text-center py-8">No community buying activity yet today.</p>`;

        // --- Render Top Sells ---
        const maxSellVolume = pulseData.mostSold.length > 0 ? pulseData.mostSold[0].volume : 1;
        topSellsContainer.innerHTML = pulseData.mostSold.length > 0
            ? pulseData.mostSold.map(stock => `
                <div>
                    <div class="flex justify-between items-center mb-1">
                        <span class="font-semibold text-primary">${stock.name}</span>
                        <span class="text-sm font-mono text-secondary">${stock.volume.toLocaleString()} shares</span>
                    </div>
                    <div class="w-full bg-primary rounded-full h-2.5">
                        <div class="bg-negative h-2.5 rounded-full" style="width: ${(stock.volume / maxSellVolume) * 100}%"></div>
                    </div>
                </div>
            `).join('')
            : `<p class="text-secondary text-center py-8">No community selling activity yet today.</p>`;
    }


    // Publicly exposed functions
    return {
        initialize: (mainState) => {
            stateRef = mainState;
        },
        renderPulseView
    };
})();